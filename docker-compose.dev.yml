services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d authdb"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10


  app:
    image: maven:3.9-eclipse-temurin-21
    working_dir: /app
    command: mvn -T 1C -DskipTests spring-boot:run
    ports:
      - "8080:8080"
      - "5005:5005"
    env_file:
      - .env.docker

    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/authdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root

      SPRING_BOOT_RUN_JVM_ARGUMENTS: >
        -Dspring.devtools.restart.poll-interval=2s
        -Dspring.devtools.restart.quiet-period=1s
        -Dspring.output.ansi.enabled=ALWAYS
        -Djava.security.egd=file:/dev/./urandom
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005

#      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
#      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
#      APP_JWT_SECRET: ${APP_JWT_SECRET}

    volumes:
      - ./:/app                 
      - m2-cache:/root/.m2      
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  m2-cache:
  db-data:
  redis-data:
